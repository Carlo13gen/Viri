/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class GdtJavaWrapper_WrapperImplementation */

#ifndef _Included_GdtJavaWrapper_WrapperImplementation
#define _Included_GdtJavaWrapper_WrapperImplementation
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    createGraph
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_createGraph
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    createNode
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_createNode
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    createEdge
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_createEdge
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    createOrthogonalGraph
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_createOrthogonalGraph
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    createConstrainedOrthogonalGraph
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_createConstrainedOrthogonalGraph
  (JNIEnv *, jobject, jint, jintArray, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    deleteGraph
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_deleteGraph
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    deleteDrawnGraph
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_deleteDrawnGraph
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    deleteOrthogonalGraph
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_deleteOrthogonalGraph
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    deleteNode
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_deleteNode
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    deleteEdge
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_deleteEdge
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    isPlanar
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_GdtJavaWrapper_WrapperImplementation_isPlanar
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    isConnected
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_GdtJavaWrapper_WrapperImplementation_isConnected
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    isBiconnected
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_GdtJavaWrapper_WrapperImplementation_isBiconnected
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    drawOrthogonalGraph
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_drawOrthogonalGraph
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    drawOrthogonalGraphUsingOrthogonal
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_drawOrthogonalGraphUsingOrthogonal
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    zeroBendEdge
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_zeroBendEdge
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    angleSweep
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_angleSweep
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    nodeWidth
 * Signature: (IID)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_nodeWidth
  (JNIEnv *, jobject, jint, jint, jdouble);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    nodeHeight
 * Signature: (IID)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_nodeHeight
  (JNIEnv *, jobject, jint, jint, jdouble);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    sameFaceNode
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_sameFaceNode
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getNodeWidth
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getNodeWidth
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getNodeHeight
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getNodeHeight
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getNodeX
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getNodeX
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getNodeY
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getNodeY
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getEdgeBendsCount
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_GdtJavaWrapper_WrapperImplementation_getEdgeBendsCount
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getEdgeBendPointX
 * Signature: (III)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getEdgeBendPointX
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getEdgeBendPointY
 * Signature: (III)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getEdgeBendPointY
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getEdgeAnchorSourceX
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getEdgeAnchorSourceX
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getEdgeAnchorSourceY
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getEdgeAnchorSourceY
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getEdgeAnchorTargetX
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getEdgeAnchorTargetX
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getEdgeAnchorTargetY
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getEdgeAnchorTargetY
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getEdgeLength
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_GdtJavaWrapper_WrapperImplementation_getEdgeLength
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    rotate
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_rotate
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    flipHorizontally
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_flipHorizontally
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    flipVertically
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_flipVertically
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    createSPQRTree
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_createSPQRTree
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    deleteSPQRTree
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_GdtJavaWrapper_WrapperImplementation_deleteSPQRTree
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getRoot
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GdtJavaWrapper_WrapperImplementation_getRoot
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    nodeType
 * Signature: (II)C
 */
JNIEXPORT jchar JNICALL Java_GdtJavaWrapper_WrapperImplementation_nodeType
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    numberOfSons
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_GdtJavaWrapper_WrapperImplementation_numberOfSons
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    firstSon
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_GdtJavaWrapper_WrapperImplementation_firstSon
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    succSon
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_GdtJavaWrapper_WrapperImplementation_succSon
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    numberOfNodes
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_GdtJavaWrapper_WrapperImplementation_numberOfNodes
  (JNIEnv *, jobject, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getQNode
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_GdtJavaWrapper_WrapperImplementation_getQNode
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    getLevel
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_GdtJavaWrapper_WrapperImplementation_getLevel
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     GdtJavaWrapper_WrapperImplementation
 * Method:    depthOfSubtree
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_GdtJavaWrapper_WrapperImplementation_depthOfSubtree
  (JNIEnv *, jobject, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
